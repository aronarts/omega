#!/usr/bin/ruby
# Omega Console
#
# Copyright (C) 2013 Mohammed Morsi <mo@morsi.org>
# Licensed under the AGPLv3 http://www.gnu.org/licenses/agpl.txt

require 'rubygems'
require 'optparse'

# <3 pry
# http://pryrepl.org/
require 'pry'

require 'omega'
require 'omega/client/dsl'
require 'rjr/nodes/amqp'

include Omega::Client::DSL

###### grab login credentials from command line
user     = 'admin'
password = 'nimda'

optparse = OptionParser.new do |opts|
  opts.on('-h', '--help', 'Display this help screen') do
    puts opts
    exit
  end

  opts.on('-u', '--user ID', 'user to log in as') do |u|
    user = u
  end

  opts.on('-p', '--password pass', 'password to use when logging in') do |p|
    password = p
  end
end

optparse.parse!

###### log into server
RJR::Logger.log_level= ::Logger::INFO

$console = self
$rjr_node =
  RJR::Nodes::AMQP.new :node_id => 'omega-console', :broker => 'localhost'
$console.dsl.rjr_node = $rjr_node
login user, password

puts "Use \"$rjr_node\" or omega client dsl to invoke requests"

###### setup pry
Pry.config.prompt_name = 'omega'
Pry.config.commands = Pry::CommandSet.new do
  #import Pry::Commands
  import_from Pry::Commands, 'help'

  Omega::Client::DSL.instance_methods(false).sort.each { |cmd|
    create_command cmd.to_s do
      description "Omega Client DSL Method"
      group 'omega'
      command_options :keep_retval => true

      def process(*args)
        $console.send(self.command_name, *args)
      end
    end unless cmd == :dsl
  }
end

###### run pry and exit
Pry.start binding, :quiet => true

puts "Exiting Omega Console"
